{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Downloads\\\\fsd\\\\Arpan Project\\\\src\\\\pages\\\\StudentDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Student from '../components/Student/Student';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentDashboard = () => {\n  _s();\n  const location = useLocation();\n  const [selectedInternship, setSelectedInternship] = useState(null);\n  useEffect(() => {\n    // Check if there's selected internship data passed from the viewer page\n    if (location.state && location.state.selectedInternship) {\n      setSelectedInternship(location.state.selectedInternship);\n      console.log('Selected internship ID:', location.state.selectedInternship);\n\n      // You can fetch internship details here based on the ID\n      // For now, we'll just pass the ID to the Student component\n    }\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-dashboard\",\n    children: [selectedInternship && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      children: [\"You've selected internship ID: \", selectedInternship, \". You can now apply for this position.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Student, {\n      selectedInternshipId: selectedInternship\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentDashboard, \"DZh1A345hITGK//Kq167psCO+58=\", false, function () {\n  return [useLocation];\n});\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","Student","jsxDEV","_jsxDEV","StudentDashboard","_s","location","selectedInternship","setSelectedInternship","state","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selectedInternshipId","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Downloads/fsd/Arpan Project/src/pages/StudentDashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Student from '../components/Student/Student';\r\n\r\nconst StudentDashboard = () => {\r\n  const location = useLocation();\r\n  const [selectedInternship, setSelectedInternship] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check if there's selected internship data passed from the viewer page\r\n    if (location.state && location.state.selectedInternship) {\r\n      setSelectedInternship(location.state.selectedInternship);\r\n      console.log('Selected internship ID:', location.state.selectedInternship);\r\n      \r\n      // You can fetch internship details here based on the ID\r\n      // For now, we'll just pass the ID to the Student component\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <div className=\"student-dashboard\">\r\n      {selectedInternship && (\r\n        <div className=\"alert alert-success\">\r\n          You've selected internship ID: {selectedInternship}. You can now apply for this position.\r\n        </div>\r\n      )}\r\n      <Student selectedInternshipId={selectedInternship} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentDashboard; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAElED,SAAS,CAAC,MAAM;IACd;IACA,IAAIQ,QAAQ,CAACG,KAAK,IAAIH,QAAQ,CAACG,KAAK,CAACF,kBAAkB,EAAE;MACvDC,qBAAqB,CAACF,QAAQ,CAACG,KAAK,CAACF,kBAAkB,CAAC;MACxDG,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEL,QAAQ,CAACG,KAAK,CAACF,kBAAkB,CAAC;;MAEzE;MACA;IACF;EACF,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA;IAAKS,SAAS,EAAC,mBAAmB;IAAAC,QAAA,GAC/BN,kBAAkB,iBACjBJ,OAAA;MAAKS,SAAS,EAAC,qBAAqB;MAAAC,QAAA,GAAC,iCACJ,EAACN,kBAAkB,EAAC,wCACrD;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACN,eACDd,OAAA,CAACF,OAAO;MAACiB,oBAAoB,EAAEX;IAAmB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAACZ,EAAA,CAzBID,gBAAgB;EAAA,QACHJ,WAAW;AAAA;AAAAmB,EAAA,GADxBf,gBAAgB;AA2BtB,eAAeA,gBAAgB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}